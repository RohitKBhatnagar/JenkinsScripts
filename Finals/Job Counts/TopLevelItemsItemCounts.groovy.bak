#!groovy
import java.text.SimpleDateFormat
import com.cloudbees.hudson.plugins.folder.*
import com.cloudbees.hudson.plugins.modeling.impl.folder.FolderTemplate
import org.jenkinsci.plugins.workflow.job.*;
import org.jenkinsci.plugins.workflow.multibranch.*;
import com.cloudbees.hudson.plugins.modeling.impl.jobTemplate.*; 
import hudson.maven.MavenModuleSet;
import hudson.model.FreeStyleProject;
import hudson.maven.MavenModule;
import jenkins.branch.OrganizationFolder;
import hudson.matrix.*; //MatrixConfiguration; //hudson.matrix.MatrixProject
import hudson.ivy.IvyModuleSet;
import com.cloudbees.hudson.plugins.modeling.impl.auxiliary.AuxModel;
import com.cloudbees.hudson.plugins.modeling.impl.builder.BuilderTemplate;
import com.cloudbees.hudson.plugins.modeling.impl.publisher.PublisherTemplate;

def iTotalItems = 0;
def iItemCount = 0;
def iCount = 0
def iFolderCount = 0
def iJobCount = 0 //WorkflowJob
def iMultiBranchProject = 0 //WorkflowMultiBranchProject
def iMavenModuleSet = 0;
def iMavenModule = 0;
def iFreeStyle = 0 //hudson.model.FreeStyleProject
def iJobTemplate = 0;
def iOrgFolder = 0;
def iMatrixConf = 0;
def iMatrixProj = 0;
def iFolderTemp = 0;
def iIvyModuleSet = 0
def iAuxModel = 0
def iBuilderTemplate = 0
def iPublisherTemplate = 0

def sdf = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss.SSS")
def startDate = new Date()
println "Start time : ${sdf.format(startDate)}"

//------------------------------------------------------------------------
//Displays all item counts for all top level items on the Jenkins Instance
//------------------------------------------------------------------------

//Master HostName and IP Address
println "Master executed on - ${java.net.InetAddress.getLocalHost()}"

println "------------------------------------------------------------------------"
println "Displays all item counts for all top level items on the Jenkins Instance"
println "------------------------------------------------------------------------"

def jenkins = Jenkins.getInstance()
//Get Workspaces for all immediate items
def topItems = jenkins.getItems()

println "Top#, Name, Total Items, Folder-Count, Workflow-Job-Count, Maven-ModuleSet-Count, MultiBranch-Count, FreeStyle-Count, JobTemplate-Count, MavenModule-Count, Oragnization-Folder-Count, Matrix-Configuration-Count, Matrix-Project-Count, Folder-Template-Count, AuxModel-Count, IvyModuleSet-Count, BuilderTemplate-Count, PublisherTemplate-Count, UnKnown"
println "================================================================================================================"
topItems.eachWithIndex
{
  topName, topCount ->
  def allItemJobs = topName.getAllItems() 
  iItemCount = 0
  iCount = 0
  iFolderCount = 0
  iJobCount = 0 //WorkflowJob
  iMultiBranchProject = 0 //WorkflowMultiBranchProject
  iMavenModuleSet = 0;
  iMavenModule = 0;
  iFreeStyle = 0 //hudson.model.FreeStyleProject
  iJobTemplate = 0;
  iOrgFolder = 0;
  iMatrixConf = 0;
  iMatrixProj = 0;
  iFolderTemp = 0;
  iIvyModuleSet = 0;
  iAuxModel = 0;
  iBuilderTemplate = 0;
  iPublisherTemplate = 0;

  allItemJobs.eachWithIndex
  {
    itemJob, itemCount ->
    try 
    {
	iTotalItems++;
        iItemCount++
	if(itemJob instanceof Folder)
		iFolderCount++;
	else if(itemJob instanceof WorkflowJob)
		iJobCount++
	else if(itemJob instanceof MavenModuleSet)
		iMavenModuleSet++;
	else if(itemJob instanceof WorkflowMultiBranchProject)
		iMultiBranchProject++
	else if(itemJob instanceof FreeStyleProject)
		iFreeStyle++
	else if(itemJob instanceof JobTemplate)
		iJobTemplate++
	else if(itemJob instanceof MavenModule)
		iMavenModule++
	else if (itemJob instanceof OrganizationFolder)
		iOrgFolder++
	else if (itemJob instanceof MatrixConfiguration)
		iMatrixConf++
	else if (itemJob instanceof MatrixProject)
		iMatrixProj++
	else if (itemJob instanceof FolderTemplate)
		iFolderTemp++
	else if (itemJob instanceof IvyModuleSet)
		iIvyModuleSet++
	else if (itemJob instanceof AuxModel)
		iAuxModel++
	else if (itemJob instanceof BuilderTemplate)
		iBuilderTemplate++
	else if (itemJob instanceof PublisherTemplate)
		iPublisherTemplate++
	else
	{
		iCount++;
		println "\t\t${topCount} | ${itemCount} | Item-Name : ${itemJob.getName()} | Class-Name : ${itemJob.getClass()}"
	}
    }
    catch(Exception exp)
    {
        println "Exception - ${exp.message}"
    }
  }
  
  println "${topCount}, ${topName.getName()}, ${iItemCount}, ${iFolderCount}, ${iJobCount}, ${iMavenModuleSet}, ${iMultiBranchProject}, ${iFreeStyle}, ${iJobTemplate}, ${iMavenModule}, ${iOrgFolder}, ${iMatrixConf}, ${iMatrixProj}, ${iFolderTemp}, ${iAuxModel}, ${iIvyModuleSet}, ${iBuilderTemplate}, ${iPublisherTemplate}, ${iCount}";

  //println "${topCount} | ${topName.getName()} | ${iItemCount} | ${iFolderCount} | ${iJobCount} | ${iMavenModuleSet} | ${iMultiBranchProject} | ${iFreeStyle} | ${iJobTemplate} | ${iMavenModule} | ${iOrgFolder} | ${iMatrixConf} | ${iMatrixProj} | ${iFolderTemp} | ${iAuxModel} | ${iIvyModuleSet} | ${iBuilderTemplate} | ${iPublisherTemplate} | ${iCount}";

  //println "${topCount} | Top-Folder-Name : ${topName.getName()} | Item-Count : ${iItemCount} | Folder-Count | ${iFolderCount} | Workflow-Job-Count | ${iJobCount} | Maven-ModuleSet-Count | ${iMavenModuleSet} | MultiBranch-Count | ${iMultiBranchProject} | FreeStyle-Count | ${iFreeStyle} | JobTemplate-Count | ${iJobTemplate} | MavenModule-Count | ${iMavenModule} | Oragnization-Folder-Count | ${iOrgFolder} | Matrix-Configuration-Count | ${iMatrixConf} | Matrix-Project-Count | ${iMatrixProj} | Folder-Template-Count | ${iFolderTemp} | AuxModel-Count | ${iAuxModel} | IvyModuleSet-Count | ${iIvyModuleSet} | BuilderTemplate-Count | ${iBuilderTemplate} | PublisherTemplate-Count | ${iPublisherTemplate} | UnKnown | ${iCount}";
}

println "____________________________________________________________________________"
println "Total items count on ${java.net.InetAddress.getLocalHost()} - ${iTotalItems}"

//---------------------------------------------------------------------------
def endDate = new Date()
println "End time: ${sdf.format(endDate)}"

use(groovy.time.TimeCategory) 
{
    def duration = endDate - startDate
  	print "Elapsed time: Days: ${duration.days}, Hours: ${duration.hours}, Minutes: ${duration.minutes}, Seconds: ${duration.seconds}"
}